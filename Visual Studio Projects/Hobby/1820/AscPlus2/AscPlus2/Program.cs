using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Collections;
using System.Diagnostics;

namespace AscPlus2
{
    class Program : Global
    {

        static void Main(string[] args)
        {
            int max, oldmax = 0;
            ulong[] i = { 693402807372464, 693402807372456, 693402807372448, 693402807372424, 693402807372416, 693402807372392, 693402807372384, 693402807372376, 693402807372368, 693402807372352, 693402807372336, 693402807372328, 693402807372320, 693402807372312, 693402807372304, 693402807372296, 693402807372288, 693402807372264, 693402807372256, 693402807372240, 693402807372232, 693402807372224, 693402807372200, 693402807372192, 693402807372184, 693402807372176, 693402807372168, 693402807372160, 693402807372144, 693402807372136, 693402807372128, 693402807372112, 693402807372096, 693402807372064, 693402807372056, 693402807372048, 693402807372040, 693402807372032, 693402807372008, 693402807372000, 693402807371984, 693402807371976, 693402807371968, 693402807371952, 693402807371944, 693402807371936, 693402807371912, 693402807371904, 693402807371888, 693402807371880, 693402807371872, 693402807371864, 693402807371856, 693402807371840, 693402807371824, 693402807371816, 693402807371808, 693402807371800, 693402807371792, 693402807371784, 693402807371776, 693402807371744, 693402807371728, 693402807371720, 693402807371712, 693402807371696, 693402807371688, 693402807371680, 693402807371656, 693402807371648, 693402807371632, 693402807371624, 693402807371616, 693402807371608, 693402807371600, 693402807371584, 693402807371568, 693402807371560, 693402807371552, 693402807371544, 693402807371536, 693402807371520, 693402807371496, 693402807371488, 693402807371472, 693402807371464, 693402807371456, 693402807371440, 693402807371432, 693402807371424, 693402807371416, 693402807371408, 693402807371400, 693402807371392, 693402807371376, 693402807371368, 693402807371360, 693402807371352, 693402807371344, 693402807371328, 693402807371312, 693402807371304, 693402807371296, 693402807371288, 693402807371280, 693402807371272, 693402807371264, 693402807371240, 693402807371232, 693402807371216, 693402807371208, 693402807371200, 693402807371176, 693402807371168, 693402807371160, 693402807371152, 693402807371144, 693402807371136, 693402807371120, 693402807371112, 693402807371104, 693402807371096, 693402807371088, 693402807371072, 693402807371056, 693402807371048, 693402807371040, 693402807371032, 693402807371024, 693402807371008, 693402807370984, 693402807370976, 693402807370960, 693402807370952, 693402807370944, 693402807370928, 693402807370920, 693402807370912, 693402807370904, 693402807370896, 693402807370888, 693402807370880, 693402807370856, 693402807370848, 693402807370840, 693402807370832, 693402807370816, 693402807370800, 693402807370792, 693402807370784, 693402807370776, 693402807370768, 693402807370760, 693402807370752, 693402807370728, 693402807370720, 693402807370704, 693402807370696, 693402807370688, 693402807370672, 693402807370664, 693402807370656, 693402807370648, 693402807370640, 693402807370632, 693402807370624, 693402807370608, 693402807370600, 693402807370592, 693402807370576, 693402807370560, 693402807370544, 693402807370536, 693402807370528, 693402807370520, 693402807370512, 693402807370496, 693402807370472, 693402807370464, 693402807370448, 693402807370440, 693402807370432, 693402807370416, 693402807370408, 693402807370400, 693402807370376, 693402807370368, 693402807370352, 693402807370344, 693402807370336, 693402807370320, 693402807370304, 693402807370288, 693402807370280, 693402807370272, 693402807370256, 693402807370248, 693402807370240, 693402807370216, 693402807370208, 693402807370192, 693402807370184, 693402807370176, 693402807370152, 693402807370144, 693402807370128, 693402807370120, 693402807370112, 693402807370096, 693402807370088, 693402807370080, 693402807370064, 693402807370048, 693402807370032, 693402807370024, 693402807370016, 693402807370000, 693402807369992, 693402807369984, 693402807369960, 693402807369952, 693402807369936, 693402807369920, 693402807369904, 693402807369896, 693402807369888, 693402807369872, 693402807369864, 693402807369856, 693402807369840, 693402807369832, 693402807369824, 693402807369808, 693402807369792, 693402807369776, 693402807369768, 693402807369760, 693402807369744, 693402807369736, 693402807369728, 693402807369648, 693402807369640, 693402807369632, 693402807369616, 693402807369608, 693402807369600, 693402807369552, 693402807369536, 693402807369520, 693402807369512, 693402807369504, 693402807369488, 693402807369472, 693402807369448, 693402807369440, 693402807369424, 693402807369416, 693402807369408, 693402807369384, 693402807369376, 693402807369352, 693402807369344, 693402807369320, 693402807369312, 693402807369296, 693402807369280, 693402807369264, 693402807369256, 693402807369248, 693402807369224, 693402807369216, 693402807369192, 693402807369184, 693402807369168, 693402807369160, 693402807369152, 693402807369136, 693402807369128, 693402807369120, 693402807369104, 693402807369096, 693402807369088, 693402807369072, 693402807369064, 693402807369056, 693402807369040, 693402807369024, 693402807369008, 693402807369000, 693402807368992, 693402807368976, 693402807368968, 693402807368960, 693402807368936, 693402807368928, 693402807368912, 693402807368904, 693402807368896, 693402807368880, 693402807368872, 693402807368864, 693402807368832, 693402807368816, 693402807368808, 693402807368800, 693402807368784, 693402807368768, 693402807368752, 693402807368744, 693402807368736, 693402807368720, 693402807368712, 693402807368704, 693402807368680, 693402807368672, 693402807368656, 693402807368640, 693402807368624, 693402807368616, 693402807368608, 693402807368592, 693402807368584, 693402807368576, 693402807368560, 693402807368552, 693402807368544, 693402807368528, 693402807368512, 693402807368496, 693402807368488, 693402807368480, 693402807368464, 693402807368456, 693402807368448, 693402807368424, 693402807368416, 693402807368400, 693402807368392, 693402807368384, 693402807368368, 693402807368360, 693402807368352, 693402807368320, 693402807368304, 693402807368296, 693402807368288, 693402807368272, 693402807368256, 693402807368240, 693402807368232, 693402807368224, 693402807368208, 693402807368200, 693402807368192, 693402807368168, 693402807368160, 693402807368144, 693402807368136, 693402807368128, 693402807368104, 693402807368096, 693402807368080, 693402807368072, 693402807368064, 693402807368048, 693402807368040, 693402807368032, 693402807368016, 693402807368000, 693402807367984, 693402807367976, 693402807367968, 693402807367952, 693402807367944, 693402807367936, 693402807367912, 693402807367904, 693402807367888, 693402807367872, 693402807367856, 693402807367848, 693402807367840, 693402807367824, 693402807367816, 693402807367808, 693402807367792, 693402807367784, 693402807367776, 693402807367760, 693402807367744, 693402807367728, 693402807367720, 693402807367712, 693402807367696, 693402807367688, 693402807367680, 693402807367632, 693402807367624, 693402807367616, 693402807367600, 693402807367592, 693402807367584, 693402807367568, 693402807367560, 693402807367552, 693402807367536, 693402807367528, 693402807367520, 693402807367504, 693402807367488, 693402807367472, 693402807367464, 693402807367456, 693402807367440, 693402807367424, 693402807367400, 693402807367392, 693402807367376, 693402807367368, 693402807367360, 693402807367344, 693402807367336, 693402807367328, 693402807367312, 693402807367304, 693402807367296, 693402807367272, 693402807367264, 693402807367248, 693402807367232, 693402807367216, 693402807367208, 693402807367200, 693402807367184, 693402807367176, 693402807367168, 693402807367144, 693402807367136, 693402807367120, 693402807367112, 693402807367104, 693402807367080, 693402807367072, 693402807367056, 693402807367048, 693402807367040, 693402807367024, 693402807367016, 693402807367008, 693402807366992, 693402807366976, 693402807366928, 693402807366920, 693402807366912, 693402807366888, 693402807366880, 693402807366864, 693402807366848, 693402807366832, 693402807366824, 693402807366816, 693402807366800, 693402807366792, 693402807366784, 693402807366760, 693402807366752, 693402807366736, 693402807366720, 693402807366704, 693402807366696, 693402807366688, 693402807366672, 693402807366656, 693402807366608, 693402807366592, 693402807366576, 693402807366568, 693402807366560, 693402807366544, 693402807366536, 693402807366528, 693402807366512, 693402807366504, 693402807366496, 693402807366480, 693402807366464, 693402807366448, 693402807366440, 693402807366432, 693402807366416, 693402807366408, 693402807366400, 693402807366376, 693402807366368, 693402807366352, 693402807366344, 693402807366336, 693402807366320, 693402807366312, 693402807366304, 693402807366280, 693402807366272, 693402807366256, 693402807366248, 693402807366240, 693402807366224, 693402807366208, 693402807366192, 693402807366184, 693402807366176, 693402807366160, 693402807366152, 693402807366144, 693402807366120, 693402807366112, 693402807366096, 693402807366088, 693402807366080, 693402807366056, 693402807366048, 693402807366032, 693402807366016, 693402807366000, 693402807365992, 693402807365984, 693402807365968, 693402807365952, 693402807365936, 693402807365928, 693402807365920, 693402807365904, 693402807365896, 693402807365888, 693402807365864, 693402807365856, 693402807365840, 693402807365832, 693402807365824, 693402807365808, 693402807365800, 693402807365792, 693402807365768, 693402807365760, 693402807365744, 693402807365736, 693402807365728, 693402807365712, 693402807365696, 693402807365680, 693402807365672, 693402807365664, 693402807365648, 693402807365632, 693402807365576, 693402807365568, 693402807365544, 693402807365536, 693402807365520, 693402807365512, 693402807365504, 693402807365488, 693402807365480, 693402807365472, 693402807365456, 693402807365440, 693402807365424, 693402807365416, 693402807365408, 693402807365392, 693402807365376, 693402807365352, 693402807365344, 693402807365328, 693402807365320, 693402807365312, 693402807365296, 693402807365288, 693402807365280, 693402807365264, 693402807365256, 693402807365248, 693402807365224, 693402807365216, 693402807365200, 693402807365184, 693402807365168, 693402807365160, 693402807365152, 693402807365128, 693402807365120, 693402807365096, 693402807365088, 693402807365072, 693402807365064, 693402807365056, 693402807365032, 693402807365024, 693402807365008, 693402807365000, 693402807364992, 693402807364976, 693402807364968, 693402807364960, 693402807364944, 693402807364928, 693402807364912, 693402807364904, 693402807364896, 693402807364880, 693402807364872, 693402807364864, 693402807364816, 693402807364800, 693402807364784, 693402807364776, 693402807364768, 693402807364752, 693402807364744, 693402807364736, 693402807364720, 693402807364712, 693402807364704, 693402807364688, 693402807364672, 693402807364656, 693402807364648, 693402807364640, 693402807364624, 693402807364616, 693402807364608, 693402807364584, 693402807364576, 693402807364560, 693402807364544, 693402807364528, 693402807364520, 693402807364512, 693402807364496, 693402807364488, 693402807364480, 115567134562077, 115567134562076, 115567134562074, 115567134562072, 115567134562070, 115567134562069, 115567134562068, 115567134562065, 115567134562064, 115567134562062, 115567134562061, 115567134562060, 115567134562058, 115567134562056, 115567134562054, 115567134562053, 115567134562052, 115567134562050, 115567134562049, 115567134562048, 115567134562042, 115567134562040, 115567134562038, 115567134562037, 115567134562036, 115567134562033, 115567134562032, 115567134562030, 115567134562029, 115567134562028, 115567134562026, 115567134562024, 115567134562022, 115567134562021, 115567134562020, 115567134562018, 115567134562016, 115567134562010, 115567134562009, 115567134562008, 115567134562006, 115567134562005, 115567134562004, 115567134562001, 115567134562000, 115567134561997, 115567134561996, 115567134561994, 115567134561992, 115567134561990, 115567134561989, 115567134561988, 115567134561985, 115567134561984, 115567134561981, 115567134561980, 115567134561978, 115567134561977, 115567134561976, 115567134561973, 115567134561972, 115567134561970, 115567134561969, 115567134561968, 115567134561966, 115567134561965, 115567134561964, 115567134561962, 115567134561960, 115567134561957, 115567134561956, 115567134561954, 115567134561953, 115567134561952, 115567134561949, 115567134561948, 115567134561946, 115567134561944, 115567134561942, 115567134561941, 115567134561940, 115567134561938, 115567134561937, 115567134561936, 115567134561934, 115567134561933, 115567134561932, 115567134561930, 115567134561928, 115567134561926, 115567134561925, 115567134561924, 115567134561922, 115567134561920, 115567134561914, 115567134561912, 115567134561910, 115567134561909, 115567134561908, 115567134561906, 115567134561905, 115567134561904, 115567134561902, 115567134561901, 115567134561900, 115567134561898, 115567134561896, 115567134561894, 115567134561893, 115567134561892, 115567134561890, 115567134561888, 115567134561885, 115567134561884, 115567134561882, 115567134561881, 115567134561880, 115567134561878, 115567134561877, 115567134561876, 115567134561873, 115567134561872, 115567134561869, 115567134561868, 115567134561866, 115567134561864, 115567134561862, 115567134561861, 115567134561860, 115567134561858, 115567134561857, 115567134561856, 115567134561853, 115567134561852, 115567134561850, 115567134561849, 115567134561848, 115567134561845, 115567134561844, 115567134561842, 115567134561841, 115567134561840, 115567134561838, 115567134561837, 115567134561836, 115567134561834, 115567134561832, 115567134561830, 115567134561829, 115567134561828, 115567134561826, 115567134561825, 115567134561824, 115567134561821, 115567134561820, 115567134561818, 115567134561817, 115567134561816, 115567134561814, 115567134561813, 115567134561812, 115567134561809, 115567134561808, 115567134561806, 115567134561805, 115567134561804, 115567134561802, 115567134561800, 115567134561798, 115567134561797, 115567134561796, 115567134561794, 115567134561793, 115567134561792, 115567134561786, 115567134561784, 115567134561782, 115567134561781, 115567134561780, 115567134561778, 115567134561777, 115567134561776, 115567134561774, 115567134561773, 115567134561772, 115567134561770, 115567134561768, 115567134561766, 115567134561765, 115567134561764, 115567134561762, 115567134561760, 115567134561757, 115567134561756, 115567134561754, 115567134561753, 115567134561752, 115567134561749, 115567134561748, 115567134561745, 115567134561744, 115567134561741, 115567134561740, 115567134561738, 115567134561736, 115567134561734, 115567134561733, 115567134561732, 115567134561729, 115567134561728, 115567134561725, 115567134561724, 115567134561722, 115567134561720, 115567134561717, 115567134561716, 115567134561714, 115567134561713, 115567134561712, 115567134561709, 115567134561708, 115567134561706, 115567134561704, 115567134561702, 115567134561701, 115567134561700, 115567134561698, 115567134561697, 115567134561696, 115567134561690, 115567134561688, 115567134561686, 115567134561685, 115567134561684, 115567134561682, 115567134561681, 115567134561680, 115567134561677, 115567134561676, 115567134561674, 115567134561672, 115567134561670, 115567134561669, 115567134561668, 115567134561666, 115567134561665, 115567134561664, 115567134561658, 115567134561656, 115567134561653, 115567134561652, 115567134561650, 115567134561649, 115567134561648, 115567134561645, 115567134561644, 115567134561642, 115567134561640, 115567134561638, 115567134561637, 115567134561636, 115567134561634, 115567134561632, 115567134561629, 115567134561628, 115567134561626, 115567134561624, 115567134561622, 115567134561621, 115567134561620, 115567134561616, 115567134561606, 115567134561605, 115567134561604, 115567134561602, 115567134561601, 115567134561600, 115567134561589, 115567134561588, 115567134561586, 115567134561585, 115567134561584, 115567134561581, 115567134561580, 115567134561578, 115567134561576, 115567134561574, 115567134561573, 115567134561572, 115567134561570, 115567134561569, 115567134561568, 115567134561562, 115567134561560, 115567134561558, 115567134561557, 115567134561556, 115567134561553, 115567134561552, 115567134561549, 115567134561548, 115567134561546, 115567134561544, 115567134561542, 115567134561541, 115567134561540, 115567134561537, 115567134561536, 115567134561530, 115567134561528, 115567134561526, 115567134561525, 115567134561524, 115567134561522, 115567134561521, 115567134561520, 115567134561517, 115567134561516, 115567134561514, 115567134561512, 115567134561510, 115567134561509, 115567134561508, 115567134561506, 115567134561504, 115567134561501, 115567134561500, 115567134561498, 115567134561496, 115567134561494, 115567134561493, 115567134561492, 115567134561489, 115567134561488, 115567134561485, 115567134561484, 115567134561482, 115567134561480, 115567134561478, 115567134561477 };
            for (int j = 0; j < i.Length; j++)
            {
                int p = 0;
                ulong n = i[j];
                do
                {
                    p++;
                    
                        if (n % 2 == 0) n = n / 2;
                        else n = n * 3 + 1;
                    
                } while (n != 1);
                if (p > 1800)
                {
                    Console.Write("{0} -> {1}", i, p);
                }
                //if (j % 100000 == 0) Console.Write(j + ": " +p+" ");
            }
            Console.WriteLine("Done");
            /*Console.WriteLine();
            v = new List<int>();
            v.AddRange(new List<int>{ 0});
            recalcN();
            Console.WriteLine(n);

            for (int j=0;j<202;j++)
                v.AddRange(new List<int> { 1, 0, 0, 0, 1, 1, 0, 1,1 });
            recalcN();
            Console.WriteLine(n);*/


            Console.ReadKey();
            Console.ReadKey();
            //{ 0,0,0,0,1,0,0,0,1,1,0,0}

            /*Start();

            back();

            Finished();*/

        }
        

        private static void back()
        {
            printStatus();
            // check numberFromV
            while (n.ToString().Length != 15)
            {
                auxv = VecOp.Add(auxv, new int[] { 1 });
                for (int i = 0; i < auxv.Length; i++)
                {
                    if (auxv[i] == 1)
                        v[i] = 3 - v[i];
                }
                recalcN();

                nrTestat++;
                if (nrTestat % 32000000 == 0)
                {
                    printStatus();
                    Console.WriteLine((System.DateTime.Now).ToString());
                }

            }
            Success();
            /*
            if (n == 0)
            {
                updateV();
            }
            else
            {
                if(n.ToString().Length != 15)
                {
                    updateV();
                    back();
                }
                else
                {
                    Success();
                }
            }*/
        }

        

        private static void updateV()
        {
            auxv = VecOp.Add(auxv, new int[] { 1 });
            for(int i = 0; i < auxv.Length; i++)
            {
                if (auxv[i] == 1)
                    v[i] = 3 - v[i];
            }
            
        }

        private static int getComplementara(int i)
        {
            if (i == 0)
                return 0;
            return 3 - i;
        }
    }
}
